
###############################     Nginx 黑马Javaweb课程配置的配置文件  ########################################

#user  nobody;
worker_processes 1;

# 启用错误日志，选择合适的日志级别
error_log  logs/error.log  notice;

#pid        logs/nginx.pid;
events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    client_body_temp_path /opt/homebrew/var/run/nginx/client_body_temp/;

    server {
        listen 90;
        server_name localhost;

        # 允许最大 50MB 的上传文件大小，可按需调整
        client_max_body_size 50m;

        # 处理根路径的请求
        location / {
            root html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        # 对以 /api/ 开头的请求进行反向代理
        location ^~ /api/ {
            # 重写规则，将 /api/ 后的内容提取出来
            rewrite ^/api/(.*)$ /$1 break;

            # 将请求转发到后端服务
            proxy_pass http://localhost:8080;

            # 设置必要的请求头，让后端获取客户端真实信息
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 超时设置，根据实际情况调整，这里设置为 10 分钟
            proxy_connect_timeout 600;
            proxy_send_timeout 600;
            proxy_read_timeout 600;

	    # 跨域相关响应头
     	    add_header 'Access-Control-Allow-Origin' '*';
    	    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    	    add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

            # 允许代理传递响应头中的 chunked 编码
            proxy_http_version 1.1;
            proxy_set_header Connection "";

            # 处理大文件上传时，临时文件的配置
            proxy_temp_path /var/tmp/nginx_proxy;
            proxy_max_temp_file_size 1024m;
        }

        # 错误页配置
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root html;
        }
    }
}